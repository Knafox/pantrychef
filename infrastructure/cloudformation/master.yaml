AWSTemplateFormatVersion: 2010-09-09

Parameters:
  CidrRange:
    Description: '1.1.1.0/16'
    Type: String
    Default: 73.73.0.0/24
  CertificateARN:
    Description: The ARN of the domain certificate
    Type: String
    Default: "arn:aws:acm:us-east-1:878527066650:certificate/1d439dcd-b25b-4ea0-8cbb-eb315c773383"
  APIDomainName:
    Description: The Base URL for the API
    Type: String
    Default: "api.lepantrychef.com"
Resources:
  # Create VPC 
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock : !Ref CidrRange
      EnableDnsHostnames : false
      EnableDnsSupport : false
      InstanceTenancy : 'default'
  Aurora:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      DatabaseName: 'pantryDB'
      DBClusterIdentifier: 'pantryChef'
      MasterUsername: 'testusername'
      MasterUserPassword: 'testpassword'
      Engine: aurora
      EngineMode: serverless
      Port: 3306
      StorageEncrypted: True

  # This is where all the front-end VueJS content will go
  StaticContent:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: lepantrychef.com
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain

  # This is where all the back-end code will live and be referenced by lambdas; also holds the CloudFormation template itself
  S3Artifacts:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: lepantrychefartifacts
    DeletionPolicy: Retain

  # Allows all objects in the front-end bucket to have public read access (it is the WWW after all)
  StaticContentPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticContent
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - !Ref StaticContent
                  - "/*"
            Principal: "*"

  # The meat of the API, note that the integration is ALWAYS 'POST', even if the request method is not. Also connects the lambda to API Gateway
  API:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: pantry-chef
      Body:
        Fn::Sub:
          |
          {
            "swagger": "2.0",
            "info": {
              "version": "1.0.0",
              "title": "pantry-chef"
            },
            "host": "api.lepantrychef.com",
            "basePath": "/",
            "x-amazon-apigateway-request-validators": {
              "all": {
                "validateRequestBody": true,
                "validateRequestParameters": true
              }
            },
            "x-amazon-apigateway-request-validator": "all",
            "schemes": [
              "https"
            ],
            "paths": {
              "/profiles": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ProfilesResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DummyLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  }
                },
                "post": {
                  "produces": [
                    "application/json"
                  ],
                  "consumes": [
                    "application/json"
                  ],
                  "responses": {
                    "201": {
                      "description": "201 response",
                      "schema": {
                        "$ref": "#/definitions/ProfileResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DummyLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  }
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/profiles/{profileId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ProfileResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DummyLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  }
                },
                "delete": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "204": {
                      "description": "204 response",
                      "schema": {
                        "$ref": "#/definitions/Empty"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DummyLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  }
                },
                "patch": {
                  "produces": [
                    "application/json"
                  ],
                  "consumes": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "201": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ProfileResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DummyLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  }
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/recipes": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/RecipesResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DummyLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  }
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/recipes/{recipeId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "recipeId",
                      "in": "path",
                      "description": "recipe id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/RecipeResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DummyLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  }
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "recipeId",
                      "in": "path",
                      "description": "recipe id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              }
            },
            "definitions": {
              "ProfilesResponse": {
                "type": "object",
                "title": "Profiles Response"
              },
              "ProfileResponse": {
                "type": "object",
                "title": "Profiles Response"
              },
              "RecipesResponse": {
                "type": "object",
                "title": "Recipes Response"
              },
              "RecipeResponse": {
                "type": "object",
                "title": "Recipe Response"
              },
              "Empty": {
                "type": "object",
                "title": "Empty Response"
              },
              "Error": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string"
                  }
                },
                "title": "Error Schema"
              }
            }
          }


  # This is a preliminary step for the stage, it's silly, but required.
  APIDeploy:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref API

  # This deployment stage makes the API visible to the web
  APIStage:
    DependsOn: APIDeploy
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId: !Ref APIDeploy
      RestApiId: !Ref API

  DomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Properties:
      CertificateArn: !Ref CertificateARN
      DomainName: !Ref APIDomainName

  Mapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref API
      Stage: !Ref APIStage

  # Basic lambda template for testing (won't actually use this)
  DummyLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: >
          import json

          def lambda_handler(event, context):

            print("Hello world")

            return {
                'statusCode': 200,
                'body': json.dumps('Cool')
            }
      Handler: index.lambda_handler
      Runtime: python3.6
      Role: !GetAtt DummyLambdaRole.Arn
      MemorySize: 128
      Timeout: 20

  # This is the access permission we give to the Lambda, in this case, it can pretty much do logging (in real cases, you'd probably want to give database access, etc)
  DummyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaLogging
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:*"
                Resource: "*"

  # This provides API Gateway access to invoke this lambda
  DummyLambdaInvoke:
    DependsOn: API
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt DummyLambda.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${API}/*"